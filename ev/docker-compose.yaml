services:
  # Reverse Proxy as HTTP/HTTPS Ingress
  proxy:
    image: traefik:2.11
    restart: unless-stopped
    networks:
      - proxy
    ports:
      - 80:80/tcp   # HTTP
    command:
      # Enable access log
      - --accesslog=true
      # Configure HTTP entrypoint
      - --entrypoints.web.address=:80/tcp
      # Enable Docker provider
      - --providers.docker=true
      - --providers.docker.endpoint=unix:///var/run/docker.sock
      - --providers.docker.exposedbydefault=false
      - --providers.docker.network=proxy
    volumes:
      # Mount Docker Socket to use it as provider
      - /var/run/docker.sock:/var/run/docker.sock:ro
  
  # BLE Proxy
  ble-proxy:
    build:
      context: ./ble-proxy
      dockerfile: Dockerfile
    restart: unless-stopped
    privileged: true
    network_mode: host
    environment:
      DEVICE_NAME: MyEV

  # EV Backend
  ev-backend:
    build:
      context: ./ev-backend
      dockerfile: Dockerfile
    restart: unless-stopped
    hostname: ev.localhost
    depends_on:
      - proxy
    networks:
      - proxy
    # Disable this, when not testing behind the traefik reverse proxy:
    labels:
      # Make available on HTTP behind reverse proxy
      - traefik.enable=true
      - traefik.http.routers.ev-backend.entrypoints=web
      - traefik.http.routers.ev-backend.rule=Host(`${EV_BACKEND_DOMAIN}`)
      - traefik.http.routers.ev-backend.service=ev-backend
      - traefik.http.services.ev-backend.loadbalancer.server.port=80
    environment:
      # Configuration:
      PORT: 80
      CSR_ENDPOINT: https://${EMSP_BACKEND_DOMAIN}/csr
      OUTPUT_FILE: /app/output/cc.cer
    volumes:
      # Output directory with certificates:
      - ./.secrets:/app/output
      # Configuration directory:
      - ./ev-backend/config:/app/config

networks:
  # Network between Reverse Proxy and services
  # Use this, when running on the Raspberry Pi behind the Bluetooth LE proxy:
  proxy:
    driver: bridge
  # host:
  #   external: true
  #   driver: host
  # # Use this, when testing directly via HTTP on the same device as the servers:
  # proxy:
  #   external: true
  #   name: emsp_proxy
